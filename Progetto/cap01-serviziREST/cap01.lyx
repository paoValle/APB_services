#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{listings,xcolor,courier,bookmark}
\usepackage{listingsutf8}
\definecolor{darkblue}{named}{blue}
\definecolor{darkred}{named}{red}
\definecolor{grau}{named}{gray}
\let\Righttorque\relax
\lstset{
captionpos=b,
commentstyle=\color[rgb]{0.133,0.545,0.133},
keywordstyle=\color{darkblue},
stringstyle=\color{darkred},
extendedchars=true,
basicstyle=\small\ttfamily,
showstringspaces=false,
tabsize=2,
numbers=left,
numberstyle=\tiny,
breakautoindent  = true,
breakindent      = 2em,
breaklines       = true,
postbreak        = ,
prebreak         = \raisebox{-.8ex}[0ex][0ex]{\Righttorque},
showspaces=false, 
showtabs=false, 
showstringspaces=false,
language=VHDL,
frame=single,
morecomment=[s]{--}
}


\renewcommand*{\lstlistingname}{Codice Componente}


\usepackage{fancyhdr}
\pagestyle{fancy}

\fancyhead{} 
\fancyfoot{} 

\fancyhead[RO,LE]{\bfseries \leftmark}
\fancyfoot[LE,RO]{\thepage}
\fancyfoot[LO,CE]{Tesina in ASE: Architetture dei Sistemi di Elaborazione}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\footrulewidth}{0.4pt}

\date{}
\cfoot{}
\usepackage{eso-pic,graphicx}
\makeatletter
\newcommand\BackgroundPicture[2]{
\setlength{\unitlength}{1pt}
\put(0,\strip@pt\paperheight){
\parbox[t][\paperheight]{\paperwidth}{
\vfill
\centering\includegraphics[angle=#2]{#1}
\vfill
}
}
}
\makeatother
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2.5cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Il progetto prevede la creazione di tre RESTful web services.
 In particolare sono stati realizzati i seguenti servizi web:
\end_layout

\begin_layout Itemize
Pagine Bianche
\end_layout

\begin_layout Itemize
Asl
\end_layout

\begin_layout Itemize
Collocamento.
 
\end_layout

\begin_layout Standard
I servizi sono tra di loro indipendenti e sono stati implementanti in Java,
 con l'ausilio di Spring Boot.
 
\end_layout

\begin_layout Section
Web Service Pagine Bianche
\end_layout

\begin_layout Standard
Il web service 
\begin_inset Quotes eld
\end_inset

Pagine Bianche
\begin_inset Quotes erd
\end_inset

 espone due servizi:
\end_layout

\begin_layout Itemize
Dato il codice fiscale restituisce tutte le informazioni di un dato utente:
 tale servizio viene richiamato tramite il metodo GET di una richiesta HTTP
 con il seguente path /utente/CodiceFiscale.
\end_layout

\begin_layout Itemize
Aggiunge un utente all'elenco date le informazioni su quest'ultimo: tale
 servizio viene richiamato tramite il metodo POST di una richiesta HTTP
 con il seguente path /aggiungi , specificando il body in formato JSON.
\end_layout

\begin_layout Standard
Le informazioni associate ad un utente sono le seguenti:
\end_layout

\begin_layout Itemize
Codice Fiscale
\end_layout

\begin_layout Itemize
nome
\end_layout

\begin_layout Itemize
cognome
\end_layout

\begin_layout Itemize
indirizzo
\end_layout

\begin_layout Itemize
numero fisso
\end_layout

\begin_layout Itemize
cellulare
\end_layout

\begin_layout Itemize
email
\end_layout

\begin_layout Section
Web Service ASL
\end_layout

\begin_layout Standard
l web service 
\begin_inset Quotes eld
\end_inset

ASL
\begin_inset Quotes erd
\end_inset

 espone due servizi:
\end_layout

\begin_layout Itemize
Dato il codice fiscale restituisce tutte le informazioni di un dato utente:
 tale servizio viene richiamato tramite il metodo GET di una richiesta HTTP
 con il seguente path /user/CodiceFiscale.
\end_layout

\begin_layout Itemize
Aggiunge un utente all'elenco date le informazioni su quest'ultimo: tale
 servizio viene richiamato tramite il metodo POST di una richiesta HTTP
 con il seguente path /user/add , specificando il body in formato JSON.
\end_layout

\begin_layout Standard
Le informazioni associate ad un utente sono le seguenti:
\end_layout

\begin_layout Itemize
Codice Fiscale
\end_layout

\begin_layout Itemize
nome
\end_layout

\begin_layout Itemize
cognome
\end_layout

\begin_layout Itemize
sesso
\end_layout

\begin_layout Itemize
data di nascita
\end_layout

\begin_layout Itemize
Medico di base
\end_layout

\begin_layout Section
Web Service Collocamento
\end_layout

\begin_layout Standard
Il web service 
\begin_inset Quotes eld
\end_inset

Collocamento
\begin_inset Quotes erd
\end_inset

 espone tre servizi:
\end_layout

\begin_layout Itemize
Dato il codice fiscale restituisce tutte le informazioni di un dato utente:
 tale servizio viene richiamato tramite il metodo GET di una richiesta HTTP
 con il seguente path /users/CodiceFiscale.
\end_layout

\begin_layout Itemize
Aggiunge un utente all'elenco date le informazioni su quest'ultimo: tale
 servizio viene richiamato tramite il metodo POST di una richiesta HTTP
 con il seguente path /users/add , specificando il body in formato JSON.
\end_layout

\begin_layout Itemize
Restituisce la lista di tutti gli utenti: tale servizio viene richiamato
 tramite il metodo GET di una richiesta HTTP con il seguente path /users.
\end_layout

\begin_layout Standard
Le informazioni associate ad un utente sono le seguenti:
\end_layout

\begin_layout Itemize
Codice Fiscale
\end_layout

\begin_layout Itemize
nome
\end_layout

\begin_layout Itemize
cognome
\end_layout

\begin_layout Itemize
data di nascita
\end_layout

\begin_layout Itemize
lavoro attuale
\end_layout

\begin_layout Itemize
lavoro precedente
\end_layout

\begin_layout Section
Scopo
\end_layout

\begin_layout Standard
Dopo aver creato i tre Rest web services, lo scopo del progetto consiste
 nell'orchestrarli in maniera opportuna.
 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/servizi1.PNG
	scale 80

\end_inset


\end_layout

\begin_layout Standard
Innanzitutto i web services sono stati deployati con Docker.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/servizi2.PNG
	scale 80

\end_inset


\end_layout

\begin_layout Standard
Infine, sono stati ochestrati con conductor.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename img/servizi3.PNG
	scale 80

\end_inset


\end_layout

\begin_layout Standard
Nei capitoli successivi, sono spiegati del dettaglio l'implementazione,
 il deploy e l'orchestrazione dei web services realizzati, mediante la creazione
 di alcuni workflow di esempio.
 
\end_layout

\end_body
\end_document
